# pyproject.toml
[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"


# project metadata

[project]
name = "pyro-hydro"
description = "A python hydrodynamics code for teaching and prototyping"
readme = "README.md"
license.text = "BSD"
authors = [
  {name="pyro development group"},
  {email="michael.zingale@stonybrook.edu"},
]
dynamic = ["version"]

dependencies = [
  "numba",
  "numpy",
  "matplotlib",
  "h5py",
]

[project.scripts]
"pyro_sim.py" = "pyro.pyro_sim:main"

[project.urls]
Homepage = "https://github.com/python-hydro/pyro2"
Documentation = "https://python-hydro.github.io/pyro2"

# packaging

[tool.setuptools]
zip-safe = false
# we explicitly list the data we want below
include-package-data = false

[tool.setuptools.packages.find]
include = ["pyro*"]
exclude = ["*.tests*"]
namespaces = false

[tool.setuptools.package-data]
# additional files to include when building a wheel
pyro = [
  "_defaults",
  "**/_defaults",
  "**/*.defaults",
  "**/inputs*",
  "*/tests/*.h5"
]

[tool.setuptools_scm]
version_scheme = "post-release"
version_file = "pyro/_version.py"

# development tools

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "unspecified-encoding",
  "line-too-long",
  "wrong-import-order",
  "too-many-branches",
  "too-many-lines",
  "too-many-statements",
  "too-many-instance-attributes",
  "too-many-arguments",
  "too-many-locals",
  "too-few-public-methods",
  "invalid-name",
  "consider-using-f-string",
  "consider-using-with",
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "pointless-string-statement",
  "cyclic-import",
  "duplicate-code",
]
enable = [
  "useless-suppression",
  "use-symbolic-message-instead",
]

[tool.pylint.CLASSES]
defining-attr-methods = [
  "__init__",
  "__new__",
  "setUp",
  "__post_init__",
  "initialize",
  "__array_finalize__",
  "setup_class", "setup_method",  # for tests
]

[tool.pylint.FORMAT]
max-line-length = 132

[tool.codespell]
skip = ".git,*docs/build"
ignore-words-list = "pres"

[tool.isort]
known_first_party = ["pyro"]

[tool.pytest.ini_options]
# docs: symlinks to notebooks we're already testing
# derive_analytic_solutions.ipynb: sympy derivations, doesn't use any pyro code
addopts = """\
  --ignore=docs/ \
  --ignore=pyro/multigrid/derive_analytic_solutions.ipynb \
  """
